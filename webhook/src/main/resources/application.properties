server.port=8092
server.servlet.context-path=/webhook

spring.application.name=webhook
spring.threads.virtual.enabled=true

management.tracing.sampling.probability=1.0
management.endpoints.web.exposure.include=prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.tags.application=${spring.application.name}

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

yas.services.location=http://api.yas.local/location

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://identity/realms/Yas

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/webhook
spring.datasource.username=admin
spring.datasource.password=admin

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (none, create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = none

#Enable liquibase
spring.liquibase.enabled=true

spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=webhook
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer

spring.kafka.consumer.properties.spring.json.use.type.headers=false

webhook.integration.kafka.product.topic-name=dbproduct.public.product
